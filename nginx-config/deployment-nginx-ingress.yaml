kind: Deployment
apiVersion: apps/v1
metadata:
  name: nginx-ingress
  namespace: nginx-ingress
  uid: ee981ce9-5e96-452d-b76a-3880f180e0bf
  resourceVersion: '17932823'
  generation: 77
  creationTimestamp: '2022-02-15T17:09:47Z'
  annotations:
    deployment.kubernetes.io/revision: '17'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"nginx-ingress","namespace":"nginx-ingress"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"nginx-ingress"}},"template":{"metadata":{"labels":{"app":"nginx-ingress"}},"spec":{"containers":[{"args":["-nginx-plus","-nginx-configmaps=$(POD_NAMESPACE)/nginx-config","-default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret","-wildcard-tls-secret=$(POD_NAMESPACE)/wildcard-tls-secret","-enable-app-protect","-enable-app-protect-dos","-ingresslink=il-cluster-vip","-nginx-status-allow-cidrs=0.0.0.0/0","-enable-preview-policies","-enable-snippets"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}}],"image":"default-route-openshift-image-registry.apps.ocp.f5-udf.com/nginx-ingress/openshift-image-plus-nap-dos:2.2.1_2022-05-20","imagePullPolicy":"IfNotPresent","name":"nginx-plus-ingress","ports":[{"containerPort":80,"name":"http"},{"containerPort":81,"name":"transport-tcp"},{"containerPort":443,"name":"https"},{"containerPort":8080,"name":"dashboard"},{"containerPort":8081,"name":"readiness-port"},{"containerPort":9113,"name":"prometheus"}],"readinessProbe":{"httpGet":{"path":"/nginx-ready","port":"readiness-port"},"periodSeconds":1},"securityContext":{"allowPrivilegeEscalation":true,"capabilities":{"add":["NET_BIND_SERVICE"],"drop":["ALL"]},"runAsUser":101}}],"serviceAccountName":"nginx-ingress","topologySpreadConstraints":[{"labelSelector":{"matchLabels":{"app":"nginx-ingress"}},"maxSkew":1,"topologyKey":"infra","whenUnsatisfiable":"DoNotSchedule"}]}}}}
  managedFields:
    - manager: kubectl-create
      operation: Update
      apiVersion: apps/v1
      time: '2022-02-15T17:09:47Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
            'f:spec':
              'f:topologySpreadConstraints':
                .: {}
                'k:{"topologyKey":"infra","whenUnsatisfiable":"DoNotSchedule"}':
                  .: {}
                  'f:labelSelector': {}
                  'f:maxSkew': {}
                  'f:topologyKey': {}
                  'f:whenUnsatisfiable': {}
              'f:containers':
                'k:{"name":"nginx-plus-ingress"}':
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources': {}
                  'f:env':
                    .: {}
                    'k:{"name":"POD_NAME"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:fieldRef':
                          .: {}
                          'f:apiVersion': {}
                          'f:fieldPath': {}
                    'k:{"name":"POD_NAMESPACE"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:fieldRef':
                          .: {}
                          'f:apiVersion': {}
                          'f:fieldPath': {}
                  'f:readinessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:securityContext':
                    .: {}
                    'f:allowPrivilegeEscalation': {}
                    'f:capabilities':
                      .: {}
                      'f:add': {}
                      'f:drop': {}
                    'f:runAsUser': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":80,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                    'k:{"containerPort":443,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                    'k:{"containerPort":8080,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                    'k:{"containerPort":8081,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                    'k:{"containerPort":9113,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                  'f:name': {}
              'f:dnsPolicy': {}
              'f:serviceAccount': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:terminationGracePeriodSeconds': {}
              'f:serviceAccountName': {}
              'f:securityContext': {}
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: apps/v1
      time: '2022-06-28T00:09:53Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
        'f:spec':
          'f:replicas': {}
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"nginx-plus-ingress"}':
                  'f:image': {}
                  'f:ports':
                    'k:{"containerPort":81,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
    - manager: Mozilla
      operation: Update
      apiVersion: apps/v1
      time: '2022-07-25T17:22:21Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"nginx-plus-ingress"}':
                  'f:args': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2022-07-26T12:24:11Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-ingress
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx-ingress
    spec:
      restartPolicy: Always
      serviceAccountName: nginx-ingress
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /nginx-ready
              port: readiness-port
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: nginx-plus-ingress
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            runAsUser: 101
            allowPrivilegeEscalation: true
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: transport-tcp
              containerPort: 81
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: dashboard
              containerPort: 8080
              protocol: TCP
            - name: readiness-port
              containerPort: 8081
              protocol: TCP
            - name: prometheus
              containerPort: 9113
              protocol: TCP
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: >-
            default-route-openshift-image-registry.apps.ocp.f5-udf.com/nginx-ingress/openshift-image-plus-nap-dos:2.2.1_2022-05-20
          args:
            - '-nginx-plus'
            - '-nginx-configmaps=$(POD_NAMESPACE)/nginx-config'
            - '-default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret'
            - '-wildcard-tls-secret=$(POD_NAMESPACE)/wildcard-tls-secret'
            - '-ingresslink=nginx-ingress'
            - '-report-ingress-status'
            - '-enable-app-protect'
            - '-enable-app-protect-dos'
            - '-nginx-status-allow-cidrs=0.0.0.0/0'
            - '-enable-preview-policies'
            - '-enable-snippets'
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: infra
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: nginx-ingress
      serviceAccount: nginx-ingress
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 77
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2022-07-26T12:04:19Z'
      lastTransitionTime: '2022-07-26T12:04:19Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2022-07-26T12:24:12Z'
      lastTransitionTime: '2022-05-24T11:32:05Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "nginx-ingress-5c5c559bc6" has successfully progressed.
